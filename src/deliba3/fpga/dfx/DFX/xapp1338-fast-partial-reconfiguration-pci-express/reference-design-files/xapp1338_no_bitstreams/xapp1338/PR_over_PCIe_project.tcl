#*****************************************************************************************
# Vivado (TM) v2018.1 (64-bit)
#
# PR_over_PCIe_project.tcl: Tcl script for re-creating project 'PR_over_PCIe'
#
# Generated by Vivado on Wed Oct 24 17:33:58 -0600 2018
# IP Build 2185939 on Wed Apr  4 20:55:05 MDT 2018
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (PR_over_PCIe_project.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "C:/Xilinx/PR_over_PCIe/PR_over_PCIe.srcs/sources_1/imports/sources/shift_right.v"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Set the target board, either kcu116 or vcu118, prior to launching script
if { [info exists ::board] } {
set board $::board
}
# Or instead, set the board here in the script
# set board "vcu118"

# This switch statement defaults to kcu116
switch $board {
vcu118 {
 set device       "xcvu9p"
 set package      "-flga2104"
 set speed        "-2l-e"
 set boardpart    "vcu118:part0:2.0"
}
default {
 set device       "xcku5p"
 set package      "-ffvb676"
 set speed        "-2-e"
 set boardpart    "kcu116:part0:1.3"
}
}
set part $device$package$speed

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "PR_over_PCIe"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "PR_over_PCIe_project_plus_bd.tcl"

# Help information for this script
proc help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/PR_over_PCIe"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part $part

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
# None

# Set project properties
set obj [current_project]
set_property -name "board_part" -value "xilinx.com:${boardpart}" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "pr_flow" -value "1" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/sources/design_1_wrapper.v"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/sources/$board/top_${board}.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "$board/top_${board}.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/sources/$board/pblocks_${board}.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "$board/pblocks_${board}.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj

# Create 'shifter' partition definition
create_partition_def -name shifter -module shift
set obj [get_partition_defs shifter]
set_property -name "name" -value "shifter" -objects $obj
set_property -name "use_blackbox_stub" -value "1" -objects $obj

# Create 'shift_left' reconfigurable module
set partitionDef [get_partition_defs shifter]
create_reconfig_module -name shift_left -partition_def $partitionDef
set obj [get_reconfig_modules shift_left]
set_property -name "module_name" -value "shift" -objects $obj

# Import local files from the original project
set files [list \
 "[file normalize "$origin_dir/sources/shift_left.v"]"\
]
import_files -of_objects [get_reconfig_modules shift_left] $files

# Set 'shift_left' fileset file properties for remote files
# None

# Set 'shift_left' fileset file properties for local files
# None

# Create 'shift_right' reconfigurable module
set partitionDef [get_partition_defs shifter]
create_reconfig_module -name shift_right -partition_def $partitionDef
set_property default_rm shift_right $partitionDef
set obj [get_reconfig_modules shift_right]
set_property -name "module_name" -value "shift" -objects $obj

# Import local files from the original project
set files [list \
 "[file normalize "$origin_dir/sources/shift_right.v"]"\
]
import_files -of_objects [get_reconfig_modules shift_right] $files

# Set 'shift_right' fileset file properties for remote files
# None

# Set 'shift_right' fileset file properties for local files
# None

# Create 'config_left' pr configurations
create_pr_configuration -name config_left
set obj [get_pr_configurations config_left]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "inst_shift:shift_left" -objects $obj

# Create 'config_right' pr configurations
create_pr_configuration -name config_right
set obj [get_pr_configurations config_right]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "inst_shift:shift_right" -objects $obj


# Adding sources referenced in BDs, if not already added

# Generating ILA for ICAP 
set ip_name ila_icap
puts "Creating IP $ip_name"
create_ip -name ila -vendor xilinx.com -library ip -module_name $ip_name
set_property -dict [list CONFIG.C_PROBE1_WIDTH        {4} \
                         CONFIG.C_PROBE0_WIDTH        {32}\
                         CONFIG.C_NUM_OF_PROBES       {2}]\
	[get_ips $ip_name]

set_property generate_synth_checkpoint false [get_files $ip_name.xci]
generate_target {all} [get_ips $ip_name]

# Generating clock wizard IP
set ip_name clk_wiz_0
puts "Creating IP $ip_name"
create_ip -name clk_wiz -vendor xilinx.com -library ip -module_name $ip_name
switch $board {
vcu118 {
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {33.330000000000005} \
   CONFIG.CLKOUT1_JITTER {124.191} \
   CONFIG.CLKOUT1_PHASE_ERROR {98.575} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {125.000} \
   CONFIG.CLKOUT2_JITTER {129.666} \
   CONFIG.CLKOUT2_PHASE_ERROR {98.575} \
   CONFIG.CLKOUT2_USED {true} \
   CONFIG.CLK_IN1_BOARD_INTERFACE {default_sysclk1_300} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {10.000} \
   CONFIG.MMCM_CLKIN1_PERIOD {3.333} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {8.000} \
   CONFIG.MMCM_CLKOUT1_DIVIDE {10} \
   CONFIG.MMCM_DIVCLK_DIVIDE {3} \
   CONFIG.NUM_OUT_CLKS {2} \
   CONFIG.PRIM_SOURCE {Differential_clock_capable_pin} \
   CONFIG.RESET_BOARD_INTERFACE {reset}] \
  [get_ips $ip_name]
}
default {
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {33.330000000000005} \
   CONFIG.CLKOUT1_JITTER {88.577} \
   CONFIG.CLKOUT1_PHASE_ERROR {77.836} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {200.000} \
   CONFIG.CLKOUT2_JITTER {101.475} \
   CONFIG.CLKOUT2_PHASE_ERROR {77.836} \
   CONFIG.CLKOUT2_USED {true} \
   CONFIG.CLK_IN1_BOARD_INTERFACE {default_sysclk1_300} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {4.000} \
   CONFIG.MMCM_CLKIN1_PERIOD {3.333} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {6.000} \
   CONFIG.MMCM_CLKOUT1_DIVIDE {12} \
   CONFIG.MMCM_DIVCLK_DIVIDE {1} \
   CONFIG.NUM_OUT_CLKS {2} \
   CONFIG.PRIM_SOURCE {Differential_clock_capable_pin} \
   CONFIG.RESET_BOARD_INTERFACE {reset}] \
  [get_ips $ip_name]
}
}
set_property generate_synth_checkpoint false [get_files $ip_name.xci]
generate_target {all} [get_ips $ip_name]


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
xilinx.com:ip:axi_gpio:*\
xilinx.com:ip:axis_data_fifo:*\
xilinx.com:ip:axis_dwidth_converter:*\
xilinx.com:ip:system_ila:*\
xilinx.com:ip:xdma:*\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set GPIO2_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 GPIO2_0 ]
  set GPIO_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 GPIO_0 ]
  set M_AXIS_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_0 ]
  set pcie_mgt_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pcie_mgt_0 ]

  # Create ports
  set m_axis_aclk_0 [ create_bd_port -dir I -type clk m_axis_aclk_0 ]
  set m_axis_aresetn_0 [ create_bd_port -dir I -type rst m_axis_aresetn_0 ]
  set sys_clk_0 [ create_bd_port -dir I -type clk sys_clk_0 ]
  set sys_clk_gt_0 [ create_bd_port -dir I -type clk sys_clk_gt_0 ]
  set sys_rst_n_0 [ create_bd_port -dir I -type rst sys_rst_n_0 ]
  set user_lnk_up_0 [ create_bd_port -dir O user_lnk_up_0 ]

  # Create instance: axi_gpio_0, and set properties
  set axi_gpio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio axi_gpio_0 ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {0} \
   CONFIG.C_ALL_INPUTS_2 {1} \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_DOUT_DEFAULT {0x00000001} \
   CONFIG.C_IS_DUAL {1} \
 ] $axi_gpio_0

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.ENABLE_ADVANCED_OPTIONS {1} \
   CONFIG.NUM_MI {1} \
 ] $axi_interconnect_0

  # Create instance: axis_data_fifo_0, and set properties
  set axis_data_fifo_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo axis_data_fifo_0 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {16} \
   CONFIG.IS_ACLK_ASYNC {1} \
 ] $axis_data_fifo_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: system_ila_0, and set properties
  set system_ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:system_ila system_ila_0 ]
  set_property -dict [ list \
   CONFIG.C_MON_TYPE {INTERFACE} \
   CONFIG.C_NUM_MONITOR_SLOTS {1} \
   CONFIG.C_SLOT_0_APC_EN {0} \
   CONFIG.C_SLOT_0_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_0_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_0_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
 ] $system_ila_0

  # Create instance: system_ila_1, and set properties
  set system_ila_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:system_ila system_ila_1 ]
  set_property -dict [ list \
   CONFIG.C_MON_TYPE {INTERFACE} \
   CONFIG.C_NUM_MONITOR_SLOTS {1} \
   CONFIG.C_SLOT_0_APC_EN {0} \
   CONFIG.C_SLOT_0_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_0_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_0_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
 ] $system_ila_1

  # Create instance: xdma_0, and set properties
  set xdma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xdma xdma_0 ]
  set_property -dict [ list \
   CONFIG.PCIE_BOARD_INTERFACE {pci_express_x8} \
   CONFIG.PF0_DEVICE_ID_mqdma {9038} \
   CONFIG.PF2_DEVICE_ID_mqdma {9038} \
   CONFIG.PF3_DEVICE_ID_mqdma {9038} \
   CONFIG.axi_data_width {256_bit} \
   CONFIG.axilite_master_en {true} \
   CONFIG.mode_selection {Advanced} \
   CONFIG.pf0_Use_Class_Code_Lookup_Assistant {true} \
   CONFIG.pf0_base_class_menu {Memory_controller} \
   CONFIG.pf0_device_id {9038} \
   CONFIG.pf0_sub_class_interface_menu {Other_memory_controller} \
   CONFIG.pl_link_cap_max_link_speed {8.0_GT/s} \
   CONFIG.plltype {QPLL1} \
   CONFIG.xdma_axi_intf_mm {AXI_Stream} \
   CONFIG.xdma_rnum_chnl {2} \
 ] $xdma_0

  # Create interface connections
  connect_bd_intf_net -intf_net S00_AXI_1 [get_bd_intf_pins axi_interconnect_0/S00_AXI] [get_bd_intf_pins xdma_0/M_AXI_LITE]
  connect_bd_intf_net -intf_net axi_gpio_0_GPIO [get_bd_intf_ports GPIO_0] [get_bd_intf_pins axi_gpio_0/GPIO]
  connect_bd_intf_net -intf_net axi_gpio_0_GPIO2 [get_bd_intf_ports GPIO2_0] [get_bd_intf_pins axi_gpio_0/GPIO2]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_gpio_0/S_AXI] [get_bd_intf_pins axi_interconnect_0/M00_AXI]
  connect_bd_intf_net -intf_net axis_data_fifo_0_M_AXIS [get_bd_intf_pins axis_data_fifo_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
connect_bd_intf_net -intf_net [get_bd_intf_nets axis_data_fifo_0_M_AXIS] [get_bd_intf_pins axis_data_fifo_0/M_AXIS] [get_bd_intf_pins system_ila_1/SLOT_0_AXIS]
  set_property -dict [ list \
HDL_ATTRIBUTE.DEBUG {true} \
 ] [get_bd_intf_nets axis_data_fifo_0_M_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_ports M_AXIS_0] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net xdma_0_M_AXIS_H2C_1 [get_bd_intf_pins axis_data_fifo_0/S_AXIS] [get_bd_intf_pins xdma_0/M_AXIS_H2C_1]
connect_bd_intf_net -intf_net [get_bd_intf_nets xdma_0_M_AXIS_H2C_1] [get_bd_intf_pins system_ila_0/SLOT_0_AXIS] [get_bd_intf_pins xdma_0/M_AXIS_H2C_1]
  set_property -dict [ list \
HDL_ATTRIBUTE.DEBUG {true} \
 ] [get_bd_intf_nets xdma_0_M_AXIS_H2C_1]
  connect_bd_intf_net -intf_net xdma_0_M_AXIS_H2C_2 [get_bd_intf_pins xdma_0/M_AXIS_H2C_0] [get_bd_intf_pins xdma_0/S_AXIS_C2H_0]
  connect_bd_intf_net -intf_net xdma_0_pcie_mgt [get_bd_intf_ports pcie_mgt_0] [get_bd_intf_pins xdma_0/pcie_mgt]

  # Create port connections
  connect_bd_net -net ARESETN_1 [get_bd_pins axi_gpio_0/s_axi_aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axis_data_fifo_0/s_axis_aresetn] [get_bd_pins system_ila_0/resetn] [get_bd_pins xdma_0/axi_aresetn]
  connect_bd_net -net m_axis_aclk_0_1 [get_bd_ports m_axis_aclk_0] [get_bd_pins axis_data_fifo_0/m_axis_aclk] [get_bd_pins axis_dwidth_converter_0/aclk] [get_bd_pins system_ila_1/clk]
  connect_bd_net -net m_axis_aresetn_0_1 [get_bd_ports m_axis_aresetn_0] [get_bd_pins axis_data_fifo_0/m_axis_aresetn] [get_bd_pins axis_dwidth_converter_0/aresetn] [get_bd_pins system_ila_1/resetn]
  connect_bd_net -net sys_clk_0_1 [get_bd_ports sys_clk_0] [get_bd_pins xdma_0/sys_clk]
  connect_bd_net -net sys_clk_gt_0_1 [get_bd_ports sys_clk_gt_0] [get_bd_pins xdma_0/sys_clk_gt]
  connect_bd_net -net sys_rst_n_0_1 [get_bd_ports sys_rst_n_0] [get_bd_pins xdma_0/sys_rst_n]
  connect_bd_net -net xdma_0_axi_aclk [get_bd_pins axi_gpio_0/s_axi_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axis_data_fifo_0/s_axis_aclk] [get_bd_pins system_ila_0/clk] [get_bd_pins xdma_0/axi_aclk]
  connect_bd_net -net xdma_0_user_lnk_up [get_bd_ports user_lnk_up_0] [get_bd_pins xdma_0/user_lnk_up]

  # Create address segments
  create_bd_addr_seg -range 0x00010000 -offset 0x00000000 [get_bd_addr_spaces xdma_0/M_AXI_LITE] [get_bd_addr_segs axi_gpio_0/S_AXI/Reg] SEG_axi_gpio_0_Reg


  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
common::send_msg_id "BD_TCL-1000" "WARNING" "This Tcl script was generated from a block design that has not been validated. It is possible that design <$design_name> may result in errors during validation."

  close_bd_design $design_name 
}
# End of cr_bd_design_1()
cr_bd_design_1 ""
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part $part -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'shift_left_synth_1' run (if not found)
if {[string equal [get_runs -quiet shift_left_synth_1] ""]} {
    create_run -name shift_left_synth_1 -part $part -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset shift_left
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs shift_left_synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs shift_left_synth_1]
}
set obj [get_runs shift_left_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'shift_left_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_synth_1] shift_left_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name shift_left_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs shift_left_synth_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_synth_1] shift_left_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs shift_left_synth_1]
set_property -name "constrset" -value "shift_left" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'shift_right_synth_1' run (if not found)
if {[string equal [get_runs -quiet shift_right_synth_1] ""]} {
    create_run -name shift_right_synth_1 -part $part -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset shift_right
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs shift_right_synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs shift_right_synth_1]
}
set obj [get_runs shift_right_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'shift_right_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_synth_1] shift_right_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name shift_right_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs shift_right_synth_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_synth_1] shift_right_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs shift_right_synth_1]
set_property -name "constrset" -value "shift_right" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part $part -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1]
}
set_property pr_configuration config_right [get_runs impl_1]
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {

}
set obj [get_runs impl_1]
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'shift_left_impl_1' run (if not found)
if {[string equal [get_runs -quiet shift_left_impl_1] ""]} {
    create_run -name shift_left_impl_1 -part $part -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset shift_left -parent_run shift_left_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs shift_left_impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs shift_left_impl_1]
}
set obj [get_runs shift_left_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'shift_left_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'shift_left_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'shift_left_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'shift_left_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'shift_left_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'shift_left_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'shift_left_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_place_report_control_sets_0]
if { $obj != "" } {

}
# Create 'shift_left_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'shift_left_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name shift_left_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'shift_left_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'shift_left_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'shift_left_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'shift_left_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'shift_left_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'shift_left_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'shift_left_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'shift_left_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_route_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'shift_left_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'shift_left_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'shift_left_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_route_report_bus_skew_0]
if { $obj != "" } {

}
# Create 'shift_left_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'shift_left_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name shift_left_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs shift_left_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_left_impl_1] shift_left_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {

}
set obj [get_runs shift_left_impl_1]
set_property -name "constrset" -value "shift_left" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'shift_right_impl_1' run (if not found)
if {[string equal [get_runs -quiet shift_right_impl_1] ""]} {
    create_run -name shift_right_impl_1 -part $part -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset shift_right -parent_run shift_right_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs shift_right_impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs shift_right_impl_1]
}
set obj [get_runs shift_right_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'shift_right_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'shift_right_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'shift_right_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'shift_right_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'shift_right_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'shift_right_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'shift_right_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_place_report_control_sets_0]
if { $obj != "" } {

}
# Create 'shift_right_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'shift_right_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name shift_right_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'shift_right_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'shift_right_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'shift_right_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'shift_right_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'shift_right_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'shift_right_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'shift_right_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'shift_right_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_route_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'shift_right_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'shift_right_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'shift_right_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_route_report_bus_skew_0]
if { $obj != "" } {

}
# Create 'shift_right_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'shift_right_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name shift_right_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs shift_right_impl_1
}
set obj [get_report_configs -of_objects [get_runs shift_right_impl_1] shift_right_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {

}
set obj [get_runs shift_right_impl_1]
set_property -name "constrset" -value "shift_right" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'child_0_impl_1' run (if not found)
if {[string equal [get_runs -quiet child_0_impl_1] ""]} {
      create_run -name child_0_impl_1 -part $part -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -pr_config config_left -constrset constrs_1 -parent_run impl_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs child_0_impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs child_0_impl_1]
}
set obj [get_runs child_0_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'child_0_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_0_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'child_0_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name child_0_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_0_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'child_0_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_0_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'child_0_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name child_0_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name child_0_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name child_0_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_control_sets_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name child_0_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'child_0_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name child_0_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'child_0_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_0_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'child_0_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_0_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'child_0_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_0_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'child_0_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name child_0_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name child_0_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name child_0_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name child_0_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_0_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name child_0_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name child_0_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name child_0_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_bus_skew_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_0_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name child_0_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {

}
set obj [get_runs child_0_impl_1]
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
